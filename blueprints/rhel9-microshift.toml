name = "rhel9-microshift"
description = "Base blueprint with microshift"
version = "0.1.0"
modules = []
groups = []
distro = ""

[customizations]
hostname = "ushift"

[[packages]]
name = "microshift"

[customizations.services]
enabled = ["sshd", "microshift", "firstboot-microshift", "firstboot-microshift-user" ]

[customizations.firewall.services]
enabled = ["ssh"]

[customizations.firewall]
ports = ["6443:tcp"]

[[customizations.files]]
path = "/etc/crio/openshift-pull-secret"
mode = "0600"
user = "root"
group = "root"
data = """
{
      "auths": {
              "servera.lab.example.com:8443": {
                      "auth": "bWljcm9zaGlmdDpyZWRoYXQxMjM="
              }
      }
}
"""

[[customizations.files]]
path = "/etc/pki/ca-trust/source/anchors/quay-rootCA.pem"
mode = "0644"
user = "root"
group = "root"
data = """
REPLACE_QUAY_CA
"""

[[customizations.files]]
path = "/etc/containers/registries.conf.d/999-microshift-mirror.conf"
mode = "0644"
user = "root"
group = "root"
data = """
[[registry]]
    prefix = ""
    location = "servera.lab.example.com:8443"
    mirror-by-digest-only = true
    insecure = false

[[registry]]
    prefix = ""
    location = "quay.io"
    mirror-by-digest-only = true
[[registry.mirror]]
    location = "servera.lab.example.com:8443"
    insecure = false

[[registry]]
    prefix = ""
    location = "registry.redhat.io"
    mirror-by-digest-only = true
[[registry.mirror]]
    location = "servera.lab.example.com:8443"
    insecure = false

[[registry]]
    prefix = ""
    location = "registry.access.redhat.com"
    mirror-by-digest-only = true
[[registry.mirror]]
    location = "servera.lab.example.com:8443"
    insecure = false
"""

[[customizations.files]]
path = "/etc/containers/policy.json"
mode = "0644"
user = "root"
group = "root"
data = """
{
	"default": [
    	{
        	"type": "insecureAcceptAnything"
    	}
	],
	"transports":
    	{
        	"docker-daemon":
            	{
                	"": [{"type":"insecureAcceptAnything"}]
            	}
    	}
}
"""

[[containers]]
source = "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98bcfe497a8550cff543321ba5c6535b9823aa4b091daf89ebba0bbcafa19208"

[[containers]]
source = "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1b0a5de3da8895f72deed91a79f4ecf83464370ce253494d28b8c98a1586bfc0"

[[containers]]
source = "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:837cf50cade2660742d2f7d146dd3ccd9539860a5a22692b0eb6a2d0616a03d3"

[[containers]]
source = "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ea5141e1b1a04c17008afa17e1ef60369bfdf71a7145299be33682c2d156d8e4"

[[containers]]
source = "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:14f7db9f9f68aaf9b6f5977aa960ea608d2142be6ca94f0973eb9f4a92da8996"

[[containers]]
source = "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c4a9f3ad460247aeedb0765584aa2b50fa44d5ff0aee24924e435057a7fb5bb9"

[[containers]]
source = "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b2fc4ac9e1fba264b1fd141acb79f93b840dc176a22bd5a0ca5e3fb28a5992f"

[[containers]]
source = "registry.redhat.io/lvms4/lvms-rhel9-operator@sha256:bd6dc4d6e90fdbcdb844759e203c9c591abc5ac29a956257a90bda101a37b76e"

[[containers]]
source = "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0849169a28fa3af48eb8e9b224708070e8eeb69355affee5765f7215858cfb4d"

[[containers]]
source = "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8d58758b9252a1e482bef3ed8861da38fcdead8bc3dd26995a915ec57b0c01c2"

[[containers]]
source = "servera.lab.example.com:8443/ubi9/ubi"

# Firstboot script to configure firewall for pod/service networks and mirror registry CA

[[customizations.files]]
path = "/etc/systemd/system/firstboot-microshift.service"
data = """
[Service]
Type=oneshot
Requires=microshift.service
ExecStart=update-ca-trust
ExecStart=firewall-offline-cmd --zone=trusted --add-source=10.42.0.0/16
ExecStart=firewall-offline-cmd --zone=trusted --add-source=169.254.169.1

[Install]
WantedBy=default.target
"""

# Firstboot script to configure user access to MicroShift

[[customizations.files]]
path = "/etc/microshift/firstboot-microshift-user"
mode = "0644"
user = "root"
group = "root"
data = """
if [ -d /var/home/core ]; then
  while ! [ -r /var/lib/microshift/resources/kubeadmin/kubeconfig ]; do
    sleep 1
  done
  sudo cp /var/lib/microshift/resources/kubeadmin/kubeconfig /var/home/core/local-admin
  sudo cp /var/lib/microshift/resources/kubeadmin/ushift/kubeconfig /var/home/core/remote-admin
  sudo chown core /var/home/core/{local,remote}-admin
  chmod a-w /var/home/core/{local,remote}-admin
fi
"""

[[customizations.files]]
path = "/etc/systemd/system/firstboot-microshift-user.service"
data = """
[Service]
Type=oneshot
Requires=microshift.service
After=microshift.service
ExecStart=bash /etc/microshift/firstboot-microshift-user

[Install]
WantedBy=default.target
"""

